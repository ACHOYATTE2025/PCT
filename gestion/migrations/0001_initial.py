# Generated by Django 4.2.3 on 2023-08-11 16:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abriter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Acteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_acteur', models.CharField(default='inconnu', max_length=20, verbose_name="nom de l'acteur")),
                ('prenom_acteur', models.CharField(default='inconnu', max_length=30, verbose_name="prenoms de l'acteur")),
                ('genre_acteur', models.CharField(choices=[('MASCULIN', 'Masculin'), ('FEMININ', 'Feminin')], default='inconnu', max_length=20, verbose_name="genre de l'acteur")),
                ('contact_acteur', models.CharField(default='inconnu', max_length=20, verbose_name="contact de l'acteur")),
                ('provenance', models.CharField(default='inconnu', max_length=20, verbose_name="provenance de l'acteur")),
                ('email_acteur', models.EmailField(default='inconnu', max_length=254, verbose_name="email de l'acteur")),
                ('age_acteur', models.CharField(default='inconnu', max_length=20, verbose_name="age del'acteur")),
                ('nombre_enfants', models.CharField(default='inconnu', max_length=20, verbose_name="nombre enfants de l'acteur")),
                ('statut_prof', models.CharField(default='inconnu', max_length=50, verbose_name="metier de l'acteur")),
                ('pays_naissance', models.CharField(default='inconnu', max_length=20, verbose_name='pays de naissance')),
                ('situation_matrimoniale', models.CharField(default='inconnu', max_length=20, verbose_name='situation_matrimoniale')),
                ('nationalité_acteur', models.CharField(default='inconnu', max_length=20, verbose_name="nationalité de l'acteur")),
                ('competences_acteur', models.CharField(default='inconnu', max_length=50, verbose_name="competences de l'acteur")),
                ('valide', models.CharField(choices=[('valider', 'Valider'), ('non_valider', 'Non Valider')], max_length=20, verbose_name='valider la personne')),
                ('statut', models.BooleanField(default=False, verbose_name='choix')),
            ],
        ),
        migrations.CreateModel(
            name='Centre_sante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libele_sante', models.CharField(help_text='nom du centre de santé', max_length=20)),
                ('emplacement_sante', models.CharField(help_text='emplacement du centre de santé', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libele_comm', models.CharField(help_text="outils de communication de l'acteur", max_length=50)),
                ('date_com', models.DateField(help_text="date d'acquisition de l'outil de l'acteur")),
            ],
        ),
        migrations.CreateModel(
            name='Enregistrer_epimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epidemie_ou_pas', models.BooleanField(help_text="présence d'épidemies oui ou nom")),
                ('centre_sante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.centre_sante')),
            ],
        ),
        migrations.CreateModel(
            name='Enregistrer_nais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_naissance', models.CharField(help_text='nombre de maissace', max_length=20)),
                ('centre_sante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.centre_sante')),
            ],
        ),
        migrations.CreateModel(
            name='Maladie_Epidemie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Libele_maladie', models.CharField(help_text='titre des épidemies', max_length=20)),
                ('nombre_morts', models.IntegerField(help_text='nombre de morts')),
                ('centre_sante_epimal', models.ManyToManyField(through='gestion.Enregistrer_epimal', to='gestion.centre_sante')),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libele_pharmacie', models.CharField(max_length=20, verbose_name='nom de la pharmarcie')),
                ('emplacement_pharmacie', models.CharField(max_length=20, verbose_name='emplacement de la pharmarcie')),
            ],
        ),
        migrations.CreateModel(
            name='Services_sante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Libele_services', models.CharField(help_text='nom du service', max_length=20)),
                ('centre_sante_c', models.ManyToManyField(through='gestion.Abriter', to='gestion.centre_sante')),
            ],
        ),
        migrations.CreateModel(
            name='Visiter_pharma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('somme_depense', models.IntegerField(verbose_name='montant depensant')),
                ('temps_visite', models.DateTimeField(help_text='la date et le temps de la visite')),
                ('nom_acteur_visiste', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.acteur')),
                ('pharmacie_visite', models.ForeignKey(help_text='nom de la pharmarcie visite', on_delete=django.db.models.deletion.CASCADE, to='gestion.pharmacie')),
            ],
        ),
        migrations.CreateModel(
            name='visite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_visite', models.DateField(help_text='date de la visite')),
                ('centre_sante_visite', models.ForeignKey(help_text="centre de santé visité par l'acteur", max_length=20, on_delete=django.db.models.deletion.CASCADE, to='gestion.centre_sante')),
                ('nom_acteur', models.ForeignKey(help_text='nom acteur', max_length=20, on_delete=django.db.models.deletion.CASCADE, to='gestion.acteur')),
            ],
        ),
        migrations.CreateModel(
            name='Traiter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libele_malepitraite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.maladie_epidemie')),
                ('libele_servicesante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.services_sante')),
            ],
        ),
        migrations.AddField(
            model_name='services_sante',
            name='maladie_epidemie',
            field=models.ManyToManyField(through='gestion.Traiter', to='gestion.maladie_epidemie'),
        ),
        migrations.CreateModel(
            name='Recherche_emploi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos')),
                ('services', models.CharField(max_length=80, verbose_name=" services proposés par l'acteur")),
                ('message', models.TextField(verbose_name='Message au public')),
                ('paiement', models.BooleanField(verbose_name='paiement pour afficher le service')),
                ('emploi_acteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.acteur')),
            ],
        ),
        migrations.CreateModel(
            name='Posseder_outils',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_acteur', models.ForeignKey(help_text="acteur possedant l'outil de communication", on_delete=django.db.models.deletion.CASCADE, to='gestion.acteur')),
                ('com_outils', models.ForeignKey(help_text="outils de communication possédé par l'acteur", on_delete=django.db.models.deletion.CASCADE, to='gestion.communication')),
            ],
        ),
        migrations.AddField(
            model_name='pharmacie',
            name='acteur_pharma',
            field=models.ManyToManyField(through='gestion.Visiter_pharma', to='gestion.acteur'),
        ),
        migrations.CreateModel(
            name='Periode_garde',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periode', models.DateField(help_text='date de garde')),
                ('pharmacie_de_garde', models.ForeignKey(help_text='pharmacie de garde', on_delete=django.db.models.deletion.CASCADE, to='gestion.pharmacie')),
            ],
        ),
        migrations.CreateModel(
            name='Naissance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_nouveau_ne', models.CharField(max_length=40, verbose_name='nom du nouveau née')),
                ('genre', models.CharField(choices=[('MASCULIN', 'Masculin'), ('FEMININ', 'Feminin')], max_length=20, verbose_name='genre du nouveau née')),
                ('date_naissance_enfant', models.DateField(verbose_name='date de naissance enfant')),
                ('mode_naissance', models.CharField(max_length=20, verbose_name="nom de l'hopital,quartier")),
                ('nom_pere', models.CharField(max_length=30, verbose_name='nom du père')),
                ('nom_mere', models.CharField(max_length=30, verbose_name='nom de la mère')),
                ('lieu_habitation', models.CharField(max_length=20, verbose_name="lieu d'habitation des parents")),
                ('valide', models.CharField(choices=[('valider', 'Valider'), ('non_valider', 'Non Valider')], max_length=20, verbose_name='valider la personne')),
                ('statut', models.BooleanField(default=False, verbose_name='choix')),
                ('centre_sante_naissance', models.ManyToManyField(through='gestion.Enregistrer_nais', to='gestion.centre_sante')),
            ],
        ),
        migrations.AddField(
            model_name='enregistrer_nais',
            name='naissance_eng',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.naissance'),
        ),
        migrations.AddField(
            model_name='enregistrer_epimal',
            name='maladie_epidemie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.maladie_epidemie'),
        ),
        migrations.CreateModel(
            name='Deces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_naissance_deces', models.DateField(verbose_name="date de naissance de décès de l'acteur ")),
                ('date_deces', models.DateField(verbose_name="date  de décès de l'acteur ")),
                ('mode_deces', models.CharField(max_length=20, verbose_name="mode de décès de l'acteur ")),
                ('raison_deces', models.CharField(max_length=20, verbose_name="raison de décès de l'acteur ")),
                ('parent_referant', models.CharField(max_length=20, verbose_name="parent  de l'acteur decédé")),
                ('lieu_deces', models.CharField(max_length=20, verbose_name="lieu du deces de l'acteur")),
                ('valide', models.CharField(choices=[('valider', 'Valider'), ('non_valider', 'Non Valider')], max_length=20, verbose_name='valider la personne')),
                ('statut', models.BooleanField(default=False, verbose_name='choix')),
                ('defunt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gestion.acteur')),
            ],
        ),
        migrations.AddField(
            model_name='communication',
            name='acteur_com',
            field=models.ManyToManyField(through='gestion.Posseder_outils', to='gestion.acteur'),
        ),
        migrations.AddField(
            model_name='centre_sante',
            name='nom_acteur_sante',
            field=models.ManyToManyField(default='inconnu', through='gestion.visite', to='gestion.acteur'),
        ),
        migrations.AddField(
            model_name='abriter',
            name='Libele_servicessante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.services_sante'),
        ),
        migrations.AddField(
            model_name='abriter',
            name='libele_centresante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion.centre_sante'),
        ),
    ]
